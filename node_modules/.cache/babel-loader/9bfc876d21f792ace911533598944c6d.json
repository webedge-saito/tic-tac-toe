{"ast":null,"code":"var _jsxFileName = \"/Users/saito-e/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    const rows = [0, 1, 2];\n    const cols = [0, 1, 2];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows.map(row => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: cols.map(col => this.renderSquare(row * 3 + col))\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        location: {\n          col: null,\n          row: null\n        }\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: {\n          col: i % 3 + 1,\n          row: Math.trunc(i / 3) + 1\n        }\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + ' (' + step.location.col + ', ' + step.location.row + ')' : 'Go to game start';\n      const className = move === this.state.stepNumber ? 'current' : '';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 128,\n  columnNumber: 15\n}, this));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","rows","cols","map","row","col","Game","constructor","state","history","Array","fill","location","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","Math","trunc","jumpTo","step","winner","moves","move","desc","className","status","root","createRoot","document","getElementById","lines","a","b","c"],"sources":["/Users/saito-e/my-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.props.squares[i]} \n          onClick={() => this.props.onClick(i)}\n          key={i}\n        />\n      );\n    }\n  \n    render() {\n      const rows = [0, 1, 2];\n      const cols = [0, 1, 2];\n      return (\n        <div>\n          {rows.map(row => {\n            return (\n              <div className=\"board-row\" key={row}>\n                {cols.map(col => this.renderSquare(row * 3 + col))}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n          location: {\n            col: null,\n            row: null,\n          },\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          location: {\n            col: i % 3 + 1,\n            row: Math.trunc(i / 3) + 1,\n          },\n        }]),\n        stepNumber: history.length,\n        xIsNext:  !this.state.xIsNext,\n      });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n\n    render() {\n      const history  = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n      const moves = history.map((step, move)  => {\n        const desc =  move ?\n          'Go to move #' + move + ' (' + step.location.col + ', ' + step.location.row + ')':\n          'Go to game start';\n        const className  = move === this.state.stepNumber ? 'current' : '';\n          return (\n            <li key={move} className={className}>\n              <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>\n          );\n      });\n\n      let status;\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)} \n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render(<Game />);\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}